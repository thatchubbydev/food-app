{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","Math","round","src","alt","App","useState","value","setValue","recipes","setRecipe","query","setQuery","useEffect","a","fetch","response","json","data","hits","console","log","getRecipes","type","onChange","e","target","onClick","preventDefault","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mQAkBeA,EAfA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxC,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,6BAAKN,IACL,6BACGG,EAAYI,KAAI,SAACC,GAAD,OACf,6BAAI,6BAAKA,EAAWC,cAGxB,8BAAIC,KAAKC,MAAMV,GAAf,IAA0B,iDAC1B,qBAAKG,UAAWC,IAAMH,MAAOU,IAAKV,EAAOW,IAAI,SCkDpCC,G,MA3DH,WACV,IADgB,EAIUC,mBAAS,IAJnB,mBAITC,EAJS,KAIFC,EAJE,OAKaF,mBAAS,IALtB,mBAKTG,EALS,KAKAC,EALA,OAMUJ,mBAAS,WANnB,mBAMTK,EANS,KAMFC,EANE,KAQhBC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSJ,EADT,mBATjB,WASiB,oBARhB,qCAOK,cACXK,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBR,EAAUQ,EAAKC,MACfC,QAAQC,IAAIH,EAAKC,MANA,2CAAH,qDAQhBG,KACC,CAACX,IAcJ,OACE,sBAAKhB,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAhB,UACE,uBACEA,UAAU,aACV4B,KAAK,OACLhB,MAAOA,EACPiB,SAlBa,SAACC,GACpBjB,GAAS,kBAAMiB,EAAEC,OAAOnB,SACxBa,QAAQC,IAAII,EAAEC,OAAOnB,UAkBjB,wBAAQZ,UAAU,gBAAgBgC,QAfnB,SAACF,GACpBA,EAAEG,iBACFhB,EAASL,GACTC,EAAS,KAYL,uBAEF,qBAAKb,UAAU,UAAf,SACCc,EAAQX,KAAI,SAACD,GAAD,OACX,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAOgC,MACrBrC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOgC,iBCtCdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.efd1987c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from './recipe.module.css'\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n  return (\r\n    <div className={style.recipe}>\r\n      <h1>{title}</h1>\r\n      <ul>\r\n        {ingredients.map((ingredient) => (\r\n          <em><li>{ingredient.text}</li></em>\r\n        ))}\r\n      </ul>\r\n      <p>{Math.round(calories)} <strong>calories</strong></p>\r\n      <img className={style.image} src={image} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\n\nconst App = () => {\n  const APP_ID = \"8e27d0f7\";\n  const APP_KEY = \"c47005750ccbe9b31b8f3f6c4c314ef4\";\n\n  const [value, setValue] = useState(\"\");\n  const [recipes, setRecipe] = useState([]);\n  const [query, setQuery] = useState(\"chicken\");\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      const response = await fetch(\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n      );\n      const data = await response.json();\n      setRecipe(data.hits);\n      console.log(data.hits);\n    };\n    getRecipes();\n  }, [query]);\n  //only wat to run whenever i hit the search button\n\n  const handleChange = (e) => {\n    setValue(() => e.target.value);\n    console.log(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setQuery(value);\n    setValue(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={value}\n          onChange={handleChange}\n        />\n        <button className='search-button' onClick={handleSubmit}>Search</button>\n      </form>\n      <div className='recipes'>\n      {recipes.map((recipe) => (\n        <Recipe\n          key={recipe.recipe.label}\n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories}\n          image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n      </div>\n      \n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2q2nE\",\"image\":\"recipe_image__3L2pT\"};"],"sourceRoot":""}